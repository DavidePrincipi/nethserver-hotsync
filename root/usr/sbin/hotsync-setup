#!/bin/bash
#
# Copyright (C) 2013-2015 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# Wed Feb 06 2013 Stefano Fancello <stefano.fancello@nethesis.it>
#

#read configuration file
source /etc/hotsync.conf

#check remote host
if [[ $1 == "--check" ]] ; then 
    echo "Checking configuration..."
    if [[ -z $REMOTE_HOST ]]; then 
        echo "Remot host not configured!"
    fi
    /usr/bin/ssh -o "ConnectTimeout=10" -o "PreferredAuthentications=publickey" -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} "exit 76" 2>/dev/null
    if [[ $? != "76" ]] ; then
        echo "Connection for root@${REMOTE_HOST} is NOT configured!"
        exit 1
    fi
    if [[ $(/usr/bin/ssh -o "ConnectTimeout=10" -o "PreferredAuthentications=publickey" -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} "/sbin/e-smith/config getprop hotsync role") != 'spare' ]] ; then
        #remote role is not spare!
        echo "Remote host is not configured as spare!"
	exit 1
    fi
    if [[ $(/usr/bin/ssh -o "ConnectTimeout=10" -o "PreferredAuthentications=publickey" -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} "/sbin/e-smith/config getprop backup-config status") == 'enabled' ]] ; then
	echo "WARNING: Spare backup config is enabled"
        exit 1
    fi
    echo "Spare correctly configured"
    exit 0
fi

#do we need a pub/key
if [[ ! -f /root/.ssh/id_rsa.pub ]] ; then  
	#key doesn't exists
	echo "Generating public/private key"
	/usr/bin/ssh-keygen -f /root/.ssh/id_rsa -P "" > /dev/null
fi


# check if ssh key exchange i needed
echo "Checking ssh key exchange..."
/usr/bin/ssh -o "ConnectTimeout=10" -o "PreferredAuthentications=publickey" -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} "exit 76" 2>/dev/null
if [[ $? != "76" ]] ; then
    #install key on remote machine. Don't use ssh-copy-id here because it doesn't support custom port
    echo "trying to copy ${REMOTE_HOST}:/root/.ssh/authorized_keys. Insert ${REMOTE_HOST} root password when requested."
    /usr/bin/ssh -o "ConnectTimeout=10" -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} 'if [[ ! -d /root/.ssh ]] ; then mkdir -p /root/.ssh; chmod 700 /root/.ssh ; fi ; if [[ ! -f /root/.ssh/authorized_keys ]] ; then touch /root/.ssh/authorized_keys; chmod 600 /root/.ssh/authorized_keys ; fi ;  cat >> /root/.ssh/authorized_keys' < /root/.ssh/id_rsa.pub
    /usr/bin/ssh -o "ConnectTimeout=10" -o "PreferredAuthentications=publickey"  -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} "exit 76" 2>/dev/null
    if [[ $? == "76" ]] ; then
        echo "Success!" 
    else
        echo "FAILED" 
    fi
else 
    echo "ok"
fi
#set spare as a spare
echo -n "Configuring spare..."
/usr/bin/ssh -o "ConnectTimeout=10" -o "PreferredAuthentications=publickey" -p ${REMOTE_SSH_PORT} root@${REMOTE_HOST} \
       "rpm -q nethserver-hotsync 
	if [[ $? != 0 ]]; then 
	    yum install -y nethserver-hotsync
	fi
        /sbin/e-smith/config setprop hotsync role spare && /etc/e-smith/events/actions/nethserver-hotsync-conf-spare"
if [[ $? != 0 ]] ; then 
    echo "FAIL"
    exit 1
fi
echo "Done"

#check if all works fine
$0 --check 

